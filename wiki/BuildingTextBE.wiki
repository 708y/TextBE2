#summary Describes the environment and steps to build TextBE.

= Introduction =

TextBE is an Eclipse feature that consists of a set of plugins that are partly generated by model-driven tools and partly hand-written. This page describes the steps necessary to build TextBE 'by hand' using the Eclipse IDE.

This page is set up as a beginners guide, but its ultimate aim is to provide the information necessary to use [http://wiki.eclipse.org/PDE/Build PDE Build] to generate the set using [http://jenkins-ci.org/ Jenkins] [http://en.wikipedia.org/wiki/Continuous_integration Continuous integration].

This page will give concrete version numbers. However users can and should attempt to use more recent versions, if the ones mentioned have become outdated.

= Build Environment =

To use this description install

 * [http://en.wikipedia.org/wiki/Windows_XP Windows XP Professional 32 Bit Service pack 3]. You must obtain a licence for this software.
 * [http://en.wikipedia.org/wiki/Java_Development_Kit Java SE 6 Update 30 JDK]. It is available from the [http://www.oracle.com/technetwork/java/javase/downloads/index.html Oracle Java SE Downloads] page.
 * Eclipse Classic 3.7.1 (labeled '[http://en.wikipedia.org/wiki/Eclipse_(software)#Releases Indigo]') available from the [http://www.eclipse.org/downloads/?osType=win32 Eclipse Downloads] page. At the time of this writing this revision [http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops/R-3.7.1-201109091335/eclipse-SDK-3.7.1-win32.zip R-3.7.1-201109091335 available through this link] *Note:* While TextBE requires numerous Modeling plugins to build, the *Eclipse Modeling Tools* version on the Indigo downloads page is still based on version 3.6 'Helios' of Eclipse. As a result, we need to assemble the required features by hand.

= Installing software into eclipse =

Procedure for [http://help.eclipse.org/indigo/topic/org.eclipse.platform.doc.user/tasks/tasks-124.htm?resultof=%22%69%6e%73%74%61%6c%6c%22%20%22%69%6e%73%74%61%6c%22%20%22%6e%65%77%22%20%22%73%6f%66%74%77%61%72%65%22%20%22%73%6f%66%74%77%61%72%22%20 installing new software] in Indigo.

= Project Access / Version Control =

Install [http://subclipse.tigris.org/ Subclipse] from the
[http://subclipse.tigris.org/update_1.8.x Subclipse 1.8.x release update site]

*Note:* In order to connect to source code as a contributor, you need to use 
'xyz@google.com' (replace 'xyz' by your uid) as your SVN user name, but you need a *different* password. Look at the following procedure that shows you 
[http://code.google.com/p/support/wiki/SubversionFAQ#Where_do_I_get_a_password_for_committing_to_Subversion? where to get your subversion access password].

== Code ==

[http://textbe.googlecode.com/svn/trunk TextBe Repository Trunk (SVN)]

== Wiki (Optional) ==

You can edit the [http://code.google.com/p/textbe/w/list TextBE wiki online]. If you want to edit it offline, you can check it using the [https://textbe.googlecode.com/svn TextBe Wiki Trunk (SVN)].

Use this procedure [http://code.google.com/p/heekscad/wiki/HowtoAddImagesToWiki to add images to the wiki].

The wiki content is written in a subset of the [http://en.wikipedia.org/wiki/MoinMoin MoinMoin] syntax documented on the [http://code.google.com/p/support/wiki/WikiSyntax Google Code Wiki Syntax page ]. To have some support with editing the content, install Mylyn Wikitext and the  
[http://update-site.moinmoinwikitext.googlecode.com/hg/ Moinmoin Wikitext integration] for Eclipse from the [http://update-site.moinmoinwikitext.googlecode.com/hg/ Moinmoin Wikitext integration download site]
 
== Issues (Optional)==

You can manage issues in the [http://code.google.com/p/textbe/issues/list TextBE online issues list]. If you want to edit them in Eclipse, install Mylyn, followed by the [http://code.google.com/p/googlecode-mylyn-connector/ Mylyn Google Code Connector] installable from the  [http://knittig.de/googlecode-mylyn-connector/update/ Google code mylyn connector update site].

*Note:* This connector uses your google account uid and password.

= Building =
This section describes how TextBE is built. It starts with an informal description of the process, then refines the items description of items that are produced with formal descriptions in the Concepts and Technology section.

== Build Steps of TextBE ==

The TextBE build is not a plain Java compilation. Instead, it involves different generators


|| *Step* || *Activity* || *PDE Component* || *Hook* || *Additional Builder Plugin* ||
|| 1 || Make a new (empty) workspace in Eclipse ||  customTargets.xml || Pre-Fetch source || - ||  
|| 2 || Download the latest code from the svn respository || global build.properties || [http://help.eclipse.org/indigo/topic/org.eclipse.pde.doc.user/reference/pde_builder_config.htm#fetchControl Fetch Control] || [http://wiki.eclipse.org/Subversive_PDE_Fetch Subversive PDE fetch] ||
|| 3 || Generate Text Resource for EMFText Concrete Syntaxes and Antlr plugin || customTargets.xml || Post Fetch source || [http://www.emftext.org/EMFTextGuide.php#x1-120002.3.2 EMFText Ant Task] ||
|| 4 ||  Generate Java Code for Ecore Model org.be.textbe.gv.model/metamodel/gv.genmodel || plugin build.properties>customBuildCallbacks=customBuildCallbacks.xml || customBuildCallbacks.xml->pre.build.jars || [http://wiki.eclipse.org/EMF/FAQ#How_can_I_use_the_EMF_Ant_tasks.3F EMF ant tasks] ||
|| 5 || Update plugin versions || qualifier = context || [http://help.eclipse.org/indigo/topic/org.eclipse.pde.doc.user/tasks/pde_version_qualifiers.htm Version Qualifier Context with Fetch]|| - ||
|| 6 || Copy the graphviz feature to the target to be included ||  global build.properties->runPackager || runPackager=defined || [http://help.eclipse.org/indigo/topic/org.eclipse.pde.doc.user/tasks/pde_packager.htm packaging Tool] ||
|| 7 || Update feature org.textbe-feature || global build.properties || none - implicit, as we are building this feature || - ||
|| 8 || upload feature to update site || customTargets.xml || postBuild || [http://www.eclipse.org/articles/Article-PDE-Automation/automation.html Use this technique to copy the resulting repository ] ||

*Note:* We aim to build a repository for upload, so we will use {{{p2.gathering = true}}} and {{{skipMirroring=defined}}} in the global build.properties as described in [http://help.eclipse.org/indigo/topic/org.eclipse.pde.doc.user/tasks/pde_p2_builds.htm P2 Builds]

|| *Concrete Syntaxes* ||
||org.be.textbe.bt.model/metamodel/textbt.cs||
||org.be.textbe.ct.model/metamodel/textct.cs||
||org.be.textbe.st.model/metamodel/textst.cs||

== Concepts and Terminology ==



=== Target ===

[http://help.eclipse.org/indigo/topic/org.eclipse.pde.doc.user/concepts/target.htm Eclipse Help Definition of Target]

=== Builder ===

[http://help.eclipse.org/indigo/nav/4_3_1 Builder Configuration]

=== Artefacts ===

[http://help.eclipse.org/indigo/topic/org.eclipse.pde.doc.user/tasks/pde_version_qualifiers.htm Versions]

==== Feature ====

[http://help.eclipse.org/indigo/topic/org.eclipse.pde.doc.user/concepts/feature.htm Eclipse Help Definition of Feature]

==== Plugin ====

[http://help.eclipse.org/indigo/topic/org.eclipse.pde.doc.user/concepts/plugin.htm Eclipse Help Definition of Plugin]

==== Fragment ====

[http://help.eclipse.org/indigo/topic/org.eclipse.pde.doc.user/concepts/fragment.htm Eclipse Help Definition of Fragment]

 
== Automating the Build ==

=== Alternatives ===

=== Introduction to PDE Build ===
[http://www.vogella.de/articles/EclipsePDEBuild/article.html PDE Build introductory article] 

[http://www.eclipse.org/articles/Article-PDE-Automation/automation.html PDE Build extended article]

[http://help.eclipse.org/indigo/nav/4_2 Eclipse PDE Build Core Documentation]

[http://help.eclipse.org/indigo/topic/org.eclipse.pde.doc.user/tasks/pde_custom_callbacks.htm PDE Build custom Callbacks]

=== PDE Locations ===



=== Assembling the Builder (Bootstrap) ===

[http://help.eclipse.org/indigo/topic/org.eclipse.platform.doc.isv/guide/p2_director.html  Installing software using the p2 director application]

 # Obtain the director
 # Install 
  # PDE
  # EMF
  # EMFText
  # PDE Subversive Fetch 

[http://help.eclipse.org/indigo/topic/org.eclipse.platform.doc.isv/reference/misc/update_standalone.html Running update manager from command line]


=== Assembling the Target ===

[http://help.eclipse.org/indigo/topic/org.eclipse.pde.doc.user/tasks/pde_fetch_phase.htm PDE fetch]

[http://wiki.eclipse.org/Subversive_PDE_Fetch Subversive PDE fetch]

*Note:* The subversive provider is brittle and different from the subclipse provider installed for interactive use!!
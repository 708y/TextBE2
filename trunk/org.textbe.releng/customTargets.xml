<project name="customTargets.template" default="noDefault">

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- Add on <ant> task for each top level element being built. -->
	<!-- ===================================================================== -->
	<available property="allElementsFile" file="${builder}/allElements.xml" value="${builder}/allElements.xml" />
	<property name="allElementsFile" location="${eclipse.pdebuild.templates}/headless-build/allElements.xml" />

	<import file="${allElementsFile}" />
	<target name="allElements">
		<antcall target="allElementsDelegator" />
	</target>

	<!-- ===================================================================== -->
	<!-- ===================================================================== -->
	<target name="getBaseComponents" depends="checkLocalBase" unless="skipBase">
		<get src="${eclipseBaseURL}" dest="${buildDirectory}/../temp-base.zip" />
		<unzip dest="${base}" overwrite="true" src="${buildDirectory}/../temp-base.zip" />
	</target>

	<target name="checkLocalBase">
		<available file="${base}" property="skipBase" />
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- ===================================================================== -->
	<target name="getMapFiles" depends="checkLocalMaps" unless="skipMaps">
		<svn command="export" url="${mapsRepo}" force="true" dest="${buildDirectory}/maps/" />
		<get src="http://download.eclipse.org/tools/orbit/downloads/drops/${orbit.Version}/orbitBundles-${orbit.Version}.p2.map" dest="${buildDirectory}/maps/orbitBundles-${orbit.Version}.p2.map" />
	</target>

	<target name="checkLocalMaps">
		<available property="skipMaps" file="${buildDirectory}/maps" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<cvs dest="${buildDirectory}/maps/${mapsRoot}" command="tag ${mapsTagTag}" />
	</target>

	<!-- ===================================================================== -->

	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>

	<target name="gatherLogs">
		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>
		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features">
				<include name="**/*.log.zip" />
			</fileset>
		</unzip>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<antcall target="getBaseComponents" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="postFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the repositories are being processed -->
	<!-- ===================================================================== -->
	<!-- To be replaced by a target read -->
	<target name="preProcessRepos">
		<p2.mirror verbose="true">
			<!-- copy these features-->
			<!-- the platform-->
			<iu id="org.eclipse.platform.feature.group" />
			<iu id="org.eclipse.rcp.feature.group" />
			<iu id="org.eclipse.jdt.feature.group" />
			<!-- EMF -->
			<iu id="org.eclipse.emf.sdk.feature.group" />
			<iu id="org.eclipse.emf.transaction.sdk.feature.group" />
			<iu id="org.eclipse.emf.validation.sdk.feature.group" />
			<!-- EMFText -->
			<iu id="org.emftext.access.feature.group" />
			<iu id="org.emftext.sdk.feature.group" />
			<iu id="org.emftext.commons.antlr3_3_0.feature.group" />
			<!-- ATL -->
			<iu id="org.eclipse.m2m.atl.sdk.feature.group" />
			<!-- JET -->
			<iu id="org.eclipse.jet.sdk.feature.group" />
			<!-- Graphviz -->
			<iu id="com.abstratt.eclipsegraphviz.feature.group" />
			<!-- Batik -->
			<iu id="org.apache.batik.util" />
			<iu id="org.apache.batik.util.gui" />
			<iu id="org.apache.batik.css" />
			<iu id="org.apache.batik.xml" />			
			<!-- from these repositories -->
			<source>
				<!-- Eclipse releases -->
				<repository location="http://download.eclipse.org/releases/indigo" />
				<repository location="http://abstratt.com/update/" />
				<repository location="http://emftext.org/update" />
				<repository location="http://download.eclipse.org/tools/orbit/downloads/drops/repository/" />
			</source>
			<!-- into this repository -->
			<destination location="file:${repoBaseLocation}/mirrored" />
			<!-- get only the latest -->
			<!-- do not download optional items -->
			<slicingoptions latestversiononly="true" includeoptional="false" includeNonGreedy="false" />
		</p2.mirror>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the repositories have been processed -->
	<!-- ===================================================================== -->
	<target name="postProcessRepos">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
		<!-- Generate the EMFText plugins that are not fetched -->
		<!--
		<emftext.GenerateTextResource rootFolder="${buildDirectory}/plugins" syntaxprojectname="org.be.textbe.bt.model" syntax="${buildDirectory}/plugins/org.be.textbe.bt.model/metamodel/textbt.cs" generateantlrplugin="false" />
		<emftext.GenerateTextResource rootFolder="${buildDirectory}/plugins" syntaxprojectname="org.be.textbe.ct.model" syntax="${buildDirectory}/plugins/org.be.textbe.ct.model/metamodel/textCT.cs" generateantlrplugin="false" />
		<emftext.GenerateTextResource rootFolder="${buildDirectory}/plugins" syntaxprojectname="org.be.textbe.ct.model" syntax="${buildDirectory}/plugins/org.be.textbe.st.model/metamodel/textST.cs" generateantlrplugin="false" />
		-->
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running assemble. -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running assemble. -->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running package. -->
	<!-- ===================================================================== -->
	<target name="prePackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running package. -->
	<!-- ===================================================================== -->
	<target name="postPackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the build is done. -->
	<!-- ===================================================================== -->
	<target name="postBuild">
		<antcall target="gatherLogs" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to test the build results -->
	<!-- ===================================================================== -->
	<target name="test">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to publish the build results -->
	<!-- ===================================================================== -->
	<target name="publish">
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
